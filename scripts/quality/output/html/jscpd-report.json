{
  "statistics": {
    "detectionDate": "2025-03-07T20:00:10.539Z",
    "formats": {
      "typescript": {
        "sources": {
          "src/utils/sanityClient.ts": {
            "lines": 170,
            "tokens": 1184,
            "sources": 1,
            "clones": 1,
            "duplicatedLines": 16,
            "duplicatedTokens": 160,
            "percentage": 9.41,
            "percentageTokens": 13.51,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/utils/portableText.ts": {
            "lines": 218,
            "tokens": 1678,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/utils/logger.ts": {
            "lines": 24,
            "tokens": 227,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/utils/documentHelpers.ts": {
            "lines": 203,
            "tokens": 1334,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/types/tools.ts": {
            "lines": 20,
            "tokens": 169,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/types/toolProvider.ts": {
            "lines": 15,
            "tokens": 38,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/types/sanity.ts": {
            "lines": 150,
            "tokens": 1015,
            "sources": 1,
            "clones": 1,
            "duplicatedLines": 7,
            "duplicatedTokens": 92,
            "percentage": 4.67,
            "percentageTokens": 9.06,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/types/index.ts": {
            "lines": 117,
            "tokens": 782,
            "sources": 1,
            "clones": 1,
            "duplicatedLines": 16,
            "duplicatedTokens": 160,
            "percentage": 13.68,
            "percentageTokens": 20.46,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/tools/schemaTools.ts": {
            "lines": 76,
            "tokens": 647,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/tools/releasesTools.ts": {
            "lines": 104,
            "tokens": 885,
            "sources": 1,
            "clones": 1,
            "duplicatedLines": 6,
            "duplicatedTokens": 78,
            "percentage": 5.77,
            "percentageTokens": 8.81,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/tools/projectsTools.ts": {
            "lines": 41,
            "tokens": 247,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/tools/mutateTools.ts": {
            "lines": 170,
            "tokens": 1652,
            "sources": 1,
            "clones": 2,
            "duplicatedLines": 10,
            "duplicatedTokens": 158,
            "percentage": 5.88,
            "percentageTokens": 9.56,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/tools/index.ts": {
            "lines": 92,
            "tokens": 596,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/tools/groqTools.ts": {
            "lines": 85,
            "tokens": 739,
            "sources": 1,
            "clones": 2,
            "duplicatedLines": 36,
            "duplicatedTokens": 354,
            "percentage": 42.35,
            "percentageTokens": 47.9,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/tools/embeddingsTools.ts": {
            "lines": 58,
            "tokens": 477,
            "sources": 1,
            "clones": 1,
            "duplicatedLines": 6,
            "duplicatedTokens": 78,
            "percentage": 10.34,
            "percentageTokens": 16.35,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/tools/contextTools.ts": {
            "lines": 97,
            "tokens": 675,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/tools/actionsTools.ts": {
            "lines": 65,
            "tokens": 534,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/controllers/schema.ts": {
            "lines": 222,
            "tokens": 1669,
            "sources": 1,
            "clones": 2,
            "duplicatedLines": 18,
            "duplicatedTokens": 190,
            "percentage": 8.11,
            "percentageTokens": 11.38,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/controllers/releases.ts": {
            "lines": 829,
            "tokens": 5152,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/controllers/projects.ts": {
            "lines": 134,
            "tokens": 915,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/controllers/mutate.ts": {
            "lines": 469,
            "tokens": 3176,
            "sources": 1,
            "clones": 3,
            "duplicatedLines": 29,
            "duplicatedTokens": 298,
            "percentage": 6.18,
            "percentageTokens": 9.38,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/controllers/groq.ts": {
            "lines": 451,
            "tokens": 3628,
            "sources": 1,
            "clones": 4,
            "duplicatedLines": 30,
            "duplicatedTokens": 392,
            "percentage": 6.65,
            "percentageTokens": 10.8,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/controllers/embeddings.ts": {
            "lines": 172,
            "tokens": 1331,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/config/config.ts": {
            "lines": 90,
            "tokens": 708,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/index.ts": {
            "lines": 109,
            "tokens": 832,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          }
        },
        "total": {
          "lines": 4181,
          "tokens": 30290,
          "sources": 25,
          "clones": 9,
          "duplicatedLines": 87,
          "duplicatedTokens": 980,
          "percentage": 2.08,
          "percentageTokens": 3.24,
          "newDuplicatedLines": 0,
          "newClones": 0
        }
      }
    },
    "total": {
      "lines": 4181,
      "tokens": 30290,
      "sources": 25,
      "clones": 9,
      "duplicatedLines": 87,
      "duplicatedTokens": 980,
      "percentage": 2.08,
      "percentageTokens": 3.24,
      "newDuplicatedLines": 0,
      "newClones": 0
    }
  },
  "duplicates": [
    {
      "format": "typescript",
      "lines": 17,
      "fragment": "{\n  create?: Record<string, any>;\n  createOrReplace?: Record<string, any>;\n  createIfNotExists?: Record<string, any>;\n  patch?: {\n    id: string;\n    set?: Record<string, any>;\n    setIfMissing?: Record<string, any>;\n    unset?: string[];\n    insert?: Record<string, any>;\n    inc?: Record<string, any>;\n    dec?: Record<string, any>;\n  };\n  delete?: {\n    id: string;\n  };\n}",
      "tokens": 0,
      "firstFile": {
        "name": "src/types/index.ts",
        "start": 79,
        "end": 95,
        "startLoc": {
          "line": 79,
          "column": 2,
          "position": 491
        },
        "endLoc": {
          "line": 95,
          "column": 2,
          "position": 651
        }
      },
      "secondFile": {
        "name": "src/utils/sanityClient.ts",
        "start": 6,
        "end": 22,
        "startLoc": {
          "line": 6,
          "column": 2,
          "position": 52
        },
        "endLoc": {
          "line": 22,
          "column": 25,
          "position": 213
        }
      }
    },
    {
      "format": "typescript",
      "lines": 6,
      "fragment": ",\n        parameters: z.object({\n          projectId: z.string().optional().describe('Project ID, if not provided will use the project ID from the environment'),\n          dataset: z.string().optional().describe('Dataset name, if not provided will use the dataset from the environment'),\n          mutations: z.array(z.record(z.any())).describe('Array of mutation objects'),\n          options",
      "tokens": 0,
      "firstFile": {
        "name": "src/tools/mutateTools.ts",
        "start": 150,
        "end": 155,
        "startLoc": {
          "line": 150,
          "column": 31,
          "position": 1424
        },
        "endLoc": {
          "line": 155,
          "column": 8,
          "position": 1503
        }
      },
      "secondFile": {
        "name": "src/tools/mutateTools.ts",
        "start": 46,
        "end": 51,
        "startLoc": {
          "line": 46,
          "column": 31,
          "position": 355
        },
        "endLoc": {
          "line": 51,
          "column": 16,
          "position": 434
        }
      }
    },
    {
      "format": "typescript",
      "lines": 19,
      "fragment": ",\n        description: 'Run a GROQ query against the dataset',\n        parameters: z.object({\n          projectId: z.string().optional().describe('Project ID, if not provided will use the project ID from the environment'),\n          dataset: z.string().optional().describe('Dataset name, if not provided will use the dataset from the environment'),\n          query: z.string().describe('GROQ query to run'),\n          params: z.record(z.any()).optional().describe('Optional parameters for the GROQ query')\n        }),\n        handler: async (args: any) => {\n          return await groqController.searchContent(\n            args.projectId,\n            args.dataset,\n            args.query,\n            args.params || {}\n          );\n        }\n      },\n      {\n        name: 'getDocument'",
      "tokens": 0,
      "firstFile": {
        "name": "src/tools/groqTools.ts",
        "start": 49,
        "end": 67,
        "startLoc": {
          "line": 49,
          "column": 8,
          "position": 337
        },
        "endLoc": {
          "line": 67,
          "column": 14,
          "position": 514
        }
      },
      "secondFile": {
        "name": "src/tools/groqTools.ts",
        "start": 31,
        "end": 49,
        "startLoc": {
          "line": 31,
          "column": 14,
          "position": 159
        },
        "endLoc": {
          "line": 49,
          "column": 8,
          "position": 336
        }
      }
    },
    {
      "format": "typescript",
      "lines": 7,
      "fragment": ",\n        parameters: z.object({\n          projectId: z.string().optional().describe('Project ID, if not provided will use the project ID from the environment'),\n          dataset: z.string().optional().describe('Dataset name, if not provided will use the dataset from the environment')\n        }),\n        handler: async (args: any) => {\n          return await embeddingsController",
      "tokens": 0,
      "firstFile": {
        "name": "src/tools/embeddingsTools.ts",
        "start": 24,
        "end": 30,
        "startLoc": {
          "line": 24,
          "column": 68,
          "position": 102
        },
        "endLoc": {
          "line": 30,
          "column": 21,
          "position": 180
        }
      },
      "secondFile": {
        "name": "src/tools/releasesTools.ts",
        "start": 42,
        "end": 48,
        "startLoc": {
          "line": 42,
          "column": 29,
          "position": 273
        },
        "endLoc": {
          "line": 48,
          "column": 19,
          "position": 351
        }
      }
    },
    {
      "format": "typescript",
      "lines": 10,
      "fragment": ".to];\n              \n              for (const refType of refTypes) {\n                const referencedType = allTypes.find(t => t.name === refType.type);\n                if (referencedType && !processedTypes.has(referencedType.name)) {\n                  referencedTypes.push(referencedType);\n                  findReferences(referencedType);\n                }\n              }\n            } else",
      "tokens": 0,
      "firstFile": {
        "name": "src/controllers/schema.ts",
        "start": 132,
        "end": 141,
        "startLoc": {
          "line": 132,
          "column": 10,
          "position": 1043
        },
        "endLoc": {
          "line": 141,
          "column": 5,
          "position": 1138
        }
      },
      "secondFile": {
        "name": "src/controllers/schema.ts",
        "start": 115,
        "end": 126,
        "startLoc": {
          "line": 115,
          "column": 6,
          "position": 827
        },
        "endLoc": {
          "line": 126,
          "column": 41,
          "position": 925
        }
      }
    },
    {
      "format": "typescript",
      "lines": 8,
      "fragment": "set?: Record<string, any>;\n    setIfMissing?: Record<string, any>;\n    unset?: string | string[];\n    inc?: Record<string, number>;\n    dec?: Record<string, number>;\n    insert?: InsertOperation;\n    diffMatchPatch?: Record<string, string>;\n  }",
      "tokens": 0,
      "firstFile": {
        "name": "src/controllers/mutate.ts",
        "start": 57,
        "end": 64,
        "startLoc": {
          "line": 57,
          "column": 5,
          "position": 581
        },
        "endLoc": {
          "line": 64,
          "column": 2,
          "position": 673
        }
      },
      "secondFile": {
        "name": "src/types/sanity.ts",
        "start": 143,
        "end": 150,
        "startLoc": {
          "line": 143,
          "column": 3,
          "position": 916
        },
        "endLoc": {
          "line": 150,
          "column": 13,
          "position": 1008
        }
      }
    },
    {
      "format": "typescript",
      "lines": 12,
      "fragment": ";\n    set?: Record<string, any>;\n    setIfMissing?: Record<string, any>;\n    unset?: string | string[];\n    inc?: Record<string, number>;\n    dec?: Record<string, number>;\n    insert?: InsertOperation;\n    diffMatchPatch?: Record<string, string>;\n  };\n}\n\nexport type",
      "tokens": 0,
      "firstFile": {
        "name": "src/controllers/mutate.ts",
        "start": 70,
        "end": 81,
        "startLoc": {
          "line": 70,
          "column": 2,
          "position": 712
        },
        "endLoc": {
          "line": 81,
          "column": 5,
          "position": 815
        }
      },
      "secondFile": {
        "name": "src/controllers/mutate.ts",
        "start": 56,
        "end": 67,
        "startLoc": {
          "line": 56,
          "column": 7,
          "position": 578
        },
        "endLoc": {
          "line": 67,
          "column": 10,
          "position": 681
        }
      }
    },
    {
      "format": "typescript",
      "lines": 7,
      "fragment": "let results;\n    if (process.env.NODE_ENV === 'test') {\n      // In test mode, only pass query and params without the third parameter\n      const queryParams = params.params && typeof params.params === 'object' ? params.params : {};\n      results = await client.fetch(query, queryParams);\n    } else {\n      // In production, use all three parameters",
      "tokens": 0,
      "firstFile": {
        "name": "src/controllers/groq.ts",
        "start": 152,
        "end": 158,
        "startLoc": {
          "line": 152,
          "column": 5,
          "position": 1225
        },
        "endLoc": {
          "line": 158,
          "column": 43,
          "position": 1311
        }
      },
      "secondFile": {
        "name": "src/controllers/groq.ts",
        "start": 57,
        "end": 63,
        "startLoc": {
          "line": 57,
          "column": 5,
          "position": 398
        },
        "endLoc": {
          "line": 63,
          "column": 6,
          "position": 484
        }
      }
    },
    {
      "format": "typescript",
      "lines": 10,
      "fragment": "if (params.filter && typeof params.filter === 'function' && Array.isArray(filtered)) {\n      filtered = filtered.filter(params.filter);\n    }\n    \n    // Apply additional limit if specified\n    if (params.limit && typeof params.limit === 'number' && Array.isArray(filtered)) {\n      filtered = filtered.slice(0, params.limit);\n    }\n    \n    // Include query and document count in the response",
      "tokens": 0,
      "firstFile": {
        "name": "src/controllers/groq.ts",
        "start": 172,
        "end": 181,
        "startLoc": {
          "line": 172,
          "column": 5,
          "position": 1436
        },
        "endLoc": {
          "line": 181,
          "column": 52,
          "position": 1546
        }
      },
      "secondFile": {
        "name": "src/controllers/groq.ts",
        "start": 76,
        "end": 85,
        "startLoc": {
          "line": 76,
          "column": 5,
          "position": 604
        },
        "endLoc": {
          "line": 85,
          "column": 19,
          "position": 714
        }
      }
    }
  ],
  "filename": "/Users/even/projects/sanity/ai/mcp/sanity-mcp-server/node_modules/@jscpd/html-reporter/dist/templates/main.pug"
}